#pragma once

int extern   N;
int extern T;
long extern double alpha_array[151][6];
long extern double beta_array[151][6];
long extern double gamma_array[151][6];
long extern double zie_array[151][6][6];
long extern double B_it_array[6][33];
long extern double A_it_array[6][6];
long extern double P_it_array[6];
int extern obs_seq_array[21][151];
long extern double delta[151][6];
int extern sie[151][6];
long extern double p_star;
long extern double prev_p_star;
int extern qt_star[151];
long extern double new_B_it_array[6][33];
long extern double new_A_it_array[6][6];
long extern double ci_values[21][150][12];
long extern double codebook[32][12];
long extern double average_B_it_array[6][33];
long extern double average_A_it_array[6][6];
long extern double intial_B_it_array[6][33];
long extern double intial_A_it_array[6][6];
long extern double P_comparision_array[10];
long extern double Prob_o_lemda_forword;
long extern double final_B_it_array[10][6][33];
long extern double final_A_it_array[10][6][6];
int extern   PLAYER_1;
int extern   PLAYER_2 ;
char extern   PLAYER_1MOVE ;
char extern   PLAYER_2MOVE ;
char extern board[3][3];
void reading_lembda();
void intialization();
void forword_process( int o);
void backword_process(int o);
void viterbi_algo( int o);
void lembda_reconstruction(int o);
void copy_matrix();
void reading_codebok();
void generate_observation_sequence(int o,int index);
void stochastic_check();
void intialization_matrix();
int speack_digit();
int speack_word();
void print_Board(char board[][3]);
void showInstructions();
void initialise(char board[][3]);
int end_game(char board[][3]);
int playTicTacToe(int Turn);
int start();
void training();
void end_print();